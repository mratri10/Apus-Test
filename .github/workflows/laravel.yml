name: Laravel Deployment

on:
  push:
    branches:
      - main  # Change this to your default branch (e.g., master)

jobs:
  laravel-deploy:
    name: Deploy Laravel App
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Set up PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, bcmath, intl, pdo, pgsql
          coverage: none

      # 3. Cache Composer packages
      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: composer-

      # 4. Install Composer dependencies
      - name: Install Dependencies
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      # 5. Copy .env.example to .env (if needed)
      - name: Prepare Environment
        run: cp .env.example .env

      # 6. Generate Laravel key
      - name: Generate App Key
        run: php artisan key:generate

      # 7. Run migrations (optional, if using DB in test)
      - name: Run Migrations
        run: php artisan migrate --force
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: your_database
          DB_USERNAME: your_username
          DB_PASSWORD: your_password

      # 8. Clear and cache config
      - name: Clear & Cache Config
        run: |
          php artisan config:clear
          php artisan cache:clear
          php artisan route:clear
          php artisan view:clear
          php artisan config:cache

      # 9. Deploy via SSH (example only â€” customize)
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /var/www/todo-system
            git pull origin main
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            sudo systemctl restart php8.3-fpm
            sudo systemctl restart nginx
